// declare a module
var happnerAngular = angular.module('grid-app-service', ['grid-app-settings', 'cgNotify',]);

happnerAngular.service('gridAppService', ['gridAppSettings', '$rootScope', 'notify', function(gridAppSettings, $rootScope, notify) {
 
	var _this = this;

 	if (!MeshClient)
 		throw new Error('happner mesh client has not been referenced, please check your html');

 	_this.settings = gridAppSettings;
 	_this.settings.authenticated = false;

 	var utils = {
      notify:function(message, type, duration, container){

        notify.closeAll();

        var params = {position:'right', classes:'alert-box'};

        params.message = message;

        if (type) params.classes += ' alert-' + type;

        if (!container) params.container = '#alert-container';

        if (container) params.container = container;

        if (duration) params.duration = duration;

        notify(params);

      },
      toJson:function(obj){
        return JSON.parse(angular.toJson(obj))
      }
    }

    _this.utils = utils;

    _this.broadcast = function(channel, data){
    	$rootScope.$broadcast(channel, data);
    }

 	_this.authenticate = function(){
 		console.log('authenticating', _this.settings);

 		new MeshClient(_this.settings.dburl, _this.settings.dbport, _this.settings.dbsecret, function(e, client){

 			if (e) throw e;

 			_this.__clientInstance = client;
 			_this.settings.authenticated = true;

 			$rootScope.$apply();
 			_this.broadcast('AUTH-OK', {user:_this.settings.dbuser, url:_this.settings.dburl, port:_this.settings.dbport});
 			console.log('authenticated ok');
      	});
 	};

 	_this.getClient = function(){
 		if (!this.__clientInstance) throw new Error('you have not authenticated yet');

 		return this.__clientInstance;
 	}

}]);

